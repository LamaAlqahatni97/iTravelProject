/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itravel; 

import java.awt.HeadlessException;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.InputMismatchException; 
import javax.swing.Icon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Hanadim
 */
public class HotelOwner extends javax.swing.JFrame {
Connection connect=null;
PreparedStatement statement=null;
ResultSet result=null;

    public HotelOwner() {
        initComponents();
   
    }

    /** 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HObuttonGroup = new javax.swing.ButtonGroup();
        BGPanel = new javax.swing.JPanel();
        HIcon = new javax.swing.JLabel();
        OwnerHeader = new javax.swing.JLabel();
        LogInBottun = new javax.swing.JRadioButton();
        RegisterBottun = new javax.swing.JRadioButton();
        UserLable = new javax.swing.JLabel();
        UserNameField = new javax.swing.JTextField();
        PasswordLable = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        RegisterPanel = new javax.swing.JPanel();
        RUserField = new javax.swing.JTextField();
        HotelField = new javax.swing.JTextField();
        NumRoomField = new javax.swing.JTextField();
        PriceField = new javax.swing.JTextField();
        HServicesField = new javax.swing.JTextField();
        RUserLabel = new javax.swing.JLabel();
        RPasswordLabel = new javax.swing.JLabel();
        HotelLabel = new javax.swing.JLabel();
        NumRoomLabel = new javax.swing.JLabel();
        PriceLabel = new javax.swing.JLabel();
        HServicesLabel = new javax.swing.JLabel();
        RPasswordField = new javax.swing.JPasswordField();
        LocationField = new javax.swing.JTextField();
        HServicesLabel1 = new javax.swing.JLabel();
        RoomTLabel = new javax.swing.JLabel();
        MaxLabel = new javax.swing.JLabel();
        RoomComboBox1 = new javax.swing.JComboBox<>();
        MaxComboBox = new javax.swing.JComboBox<>();
        LogInButton = new javax.swing.JButton();
        RegisterButton = new javax.swing.JButton();
        BackButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hotel Owner ");

        BGPanel.setBackground(new java.awt.Color(238, 236, 233));

        HIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/f5.jpg"))); // NOI18N

        OwnerHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/h.jpg"))); // NOI18N

        HObuttonGroup.add(LogInBottun);
        LogInBottun.setText("Log In");
        LogInBottun.setToolTipText("");
        LogInBottun.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LogInBottunItemStateChanged(evt);
            }
        });

        HObuttonGroup.add(RegisterBottun);
        RegisterBottun.setText("New Register");
        RegisterBottun.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                RegisterBottunItemStateChanged(evt);
            }
        });

        UserLable.setText("User Name:");

        UserNameField.setEditable(false);
        UserNameField.setToolTipText("Enter your user name here");

        PasswordLable.setText("Password:");

        PasswordField.setEditable(false);
        PasswordField.setToolTipText("Enter your password here");

        RegisterPanel.setBackground(new java.awt.Color(238, 236, 233));

        RUserField.setEditable(false);
        RUserField.setToolTipText("Enter your user name here");

        HotelField.setEditable(false);
        HotelField.setToolTipText("Enter your hotel name here");

        NumRoomField.setEditable(false);
        NumRoomField.setToolTipText("Enter the number of room here");

        PriceField.setEditable(false);
        PriceField.setToolTipText("Enter the price for each room peer night ");

        HServicesField.setEditable(false);
        HServicesField.setToolTipText("Enter your hotel services here");

        RUserLabel.setText("User Name");

        RPasswordLabel.setText("Password");

        HotelLabel.setText("Hotel Name");

        NumRoomLabel.setText("Number of Room");

        PriceLabel.setText("Price");

        HServicesLabel.setText("Hotels Services");

        RPasswordField.setEditable(false);
        RPasswordField.setToolTipText("Enter your password here");

        LocationField.setEditable(false);
        LocationField.setToolTipText("Enter your hotel services here");

        HServicesLabel1.setText("Location");

        RoomTLabel.setText("Room Type");

        MaxLabel.setText("Max customer");

        RoomComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "one_Bedroom", "Two_ Bedroom" }));

        MaxComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        javax.swing.GroupLayout RegisterPanelLayout = new javax.swing.GroupLayout(RegisterPanel);
        RegisterPanel.setLayout(RegisterPanelLayout);
        RegisterPanelLayout.setHorizontalGroup(
            RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPanelLayout.createSequentialGroup()
                        .addComponent(RUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RUserField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RegisterPanelLayout.createSequentialGroup()
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NumRoomLabel)
                            .addComponent(PriceLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NumRoomField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PriceField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(RegisterPanelLayout.createSequentialGroup()
                        .addComponent(HServicesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(HServicesField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPanelLayout.createSequentialGroup()
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HotelLabel)
                            .addComponent(RPasswordLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RPasswordField)
                            .addComponent(HotelField, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPanelLayout.createSequentialGroup()
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HServicesLabel1)
                            .addComponent(RoomTLabel)
                            .addComponent(MaxLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LocationField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RoomComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        RegisterPanelLayout.setVerticalGroup(
            RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RUserLabel)
                    .addComponent(RUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RPasswordLabel)
                    .addComponent(RPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HotelLabel)
                    .addComponent(HotelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumRoomLabel)
                    .addComponent(NumRoomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PriceLabel)
                    .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HServicesLabel)
                    .addComponent(HServicesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HServicesLabel1))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RoomTLabel)
                    .addGroup(RegisterPanelLayout.createSequentialGroup()
                        .addComponent(RoomComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MaxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaxLabel)))))
        );

        LogInButton.setText("Login");
        LogInButton.setToolTipText("");
        LogInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogInButtonActionPerformed(evt);
            }
        });

        RegisterButton.setText("Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        BackButton1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        BackButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        BackButton1.setToolTipText("");
        BackButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BGPanelLayout = new javax.swing.GroupLayout(BGPanel);
        BGPanel.setLayout(BGPanelLayout);
        BGPanelLayout.setHorizontalGroup(
            BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(LogInBottun, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(UserNameField)
                                .addComponent(PasswordLable, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(UserLable))
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(LogInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RegisterBottun)
                .addGap(134, 134, 134))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegisterPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                        .addComponent(RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addGap(69, 69, 69))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                .addComponent(OwnerHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(BackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        BGPanelLayout.setVerticalGroup(
            BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(OwnerHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(BackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(LogInBottun)
                                .addGap(31, 31, 31)
                                .addComponent(UserLable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UserNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PasswordLable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(LogInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RegisterBottun)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addComponent(RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 67, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(HIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogInButtonActionPerformed
try{
         if(UserNameField.getText().length()!=0&& PasswordField.getText().length()!=0){
             String query1="SELECT * FROM itravel.`hotels_information` WHERE User_name=? and Password=?";
              try{
                connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
                statement=connect.prepareStatement(query1);
                statement.setString(1, UserNameField.getText());
                statement.setString(2,PasswordField.getText());
                result=statement.executeQuery();
                if(result.next()) {
                    OwnerAccount ownerAccount = new OwnerAccount(UserNameField.getText(),PasswordField.getText() );
            
                    ownerAccount.setVisible(true);
                
                dispose();}
                
                 else{
                JOptionPane.showMessageDialog(null, "Username and Password are not matched please try agin !"
                 ,"Log in Error",JOptionPane.ERROR_MESSAGE);}

            }catch(SQLException  ex){
                JOptionPane.showMessageDialog(null,ex);
}}  else {
          JOptionPane.showMessageDialog(HotelOwner.this,"You have to fill all the information"
                  ,"Missing Information",JOptionPane.WARNING_MESSAGE);}

}catch(InputMismatchException e){ 
            JOptionPane.showMessageDialog(HotelOwner.this,"somethong went wrong with your insertion","Error",JOptionPane.WARNING_MESSAGE);
      }
        catch(Exception e){
      JOptionPane.showMessageDialog(null,"Error please try again ");
      }

    }//GEN-LAST:event_LogInButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
 if(  HServicesField.getText().length()!=0&& HotelField.getText().length()!=0 &&  
      NumRoomField.getText().length()!=0 && RPasswordField.getText().length()!=0 &&
      RUserField.getText().length()!=0 &&  PriceField.getText().length()!=0 && 
         LocationField.getText().length()!=0 ){    
        try{
         String Location= LocationField.getText();  
          String user=RUserField.getText();
          String HotelF=HotelField.getText(); 
          String HServices=HServicesField.getText();
          String Rnumb=NumRoomField.getText();
          String price=PriceField.getText();
          
if(!user.matches("^[a-zA-Z]+$")){
        JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","User name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HotelF.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","Hotel name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HServices.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","Hotel Services Field ",JOptionPane.WARNING_MESSAGE);}
else if (!Location.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","Location Field ",JOptionPane.WARNING_MESSAGE);}
 else if (!Rnumb.matches("\\d+")){ JOptionPane.showMessageDialog(HotelOwner.this,"Must enter a numeric value ",
                     "Number of room Field",JOptionPane.WARNING_MESSAGE);}
  else if (!price.matches("\\d+")){ JOptionPane.showMessageDialog(HotelOwner.this,"Must enter a numeric value ",
                     "Price Field",JOptionPane.WARNING_MESSAGE);}
else {
 
        String selectMax =  "SELECT MAX(SERIAL_NUMBER) FROM hotels_information";
        String selectMaxRoom = "SELECT MAX(ROOM_NUMBER) FROM ROOMS";
        try ( Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        Statement st=connection.createStatement()){
        int max = 0;    
        ResultSet rs = st.executeQuery(selectMax);
        while(rs.next()) {
            max = rs.getInt(1);
        }
        int maxRoom = 0;
        rs = st.executeQuery(selectMaxRoom);
        while(rs.next()) {
            maxRoom = rs.getInt(1);
        }
        String INSERT1="INSERT INTO  itravel.`hotels_information` "+
            "( `Serial_Number`,`Hotel_name`,`User_Name`,`Password`, `Number_of_Room`, `Price`,`Location`)"
            + " VALUES("+(max+1)+",'"+HotelField.getText()+"','"+ RUserField.getText() +"','"+RPasswordField.getText()+"',"+
                    Integer.parseInt(NumRoomField.getText())+","+Integer.parseInt(PriceField.getText())+",'"+LocationField.getText()+"')";
        
        String INSERT2="INSERT INTO itravel.`hotel_service` (`SN`,`Hotel_service`) VALUES("+(max+1)+",'"+HServicesField.getText()+"')";
        String INSERT3="INSERT INTO itravel.`rooms` (`ROOM_NUMBER`,`HSN`,`Max_Customer`,`Type`) VALUES("+(maxRoom+1)+","+(max+1)+",'"+MaxComboBox.getSelectedItem().toString()+"','"+RoomComboBox1.getSelectedItem().toString()+"')";
        int result1=st.executeUpdate(INSERT1);
        int result2=st.executeUpdate(INSERT2);
           int result3=st.executeUpdate(INSERT3);
            JOptionPane.showMessageDialog(null," You have been succssfuly registerd");
            OwnerAccount ownerAccount = new OwnerAccount(RUserField.getText(),RPasswordField.getText() );
         ownerAccount.setVisible(true);
         dispose();
           } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,ex.getMessage());
    }
  }
       
      
     
 } catch(Exception e){
      JOptionPane.showMessageDialog(HotelOwner.this,"somethong went wrong with your insertion","Error",JOptionPane.WARNING_MESSAGE);
      }
        
 } else {
          JOptionPane.showMessageDialog(HotelOwner.this,"You have to fill all the information"
                  ,"Missing Information",JOptionPane.WARNING_MESSAGE);}
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void RegisterBottunItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RegisterBottunItemStateChanged
    
           if (RegisterBottun.isSelected() ) {
                   HServicesField.setEditable(true);
                    HotelField.setEditable(true);
                    NumRoomField.setEditable(true);
                    RPasswordField.setEditable(true);
                    RUserField.setEditable(true);
                    PriceField.setEditable(true);
                    LocationField.setEditable(true);
           }
                   
        
                else {
                    HServicesField.setEditable(false);
                    HotelField.setEditable(false);
                    NumRoomField.setEditable(false);
                    RPasswordField.setEditable(false);
                    RUserField.setEditable(false);
                    PriceField.setEditable(false);
                    LocationField.setEditable(false);}
    }//GEN-LAST:event_RegisterBottunItemStateChanged

    private void LogInBottunItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LogInBottunItemStateChanged
        
         if (LogInBottun.isSelected() ) {  
            PasswordField.setEditable(true);
           UserNameField.setEditable(true);
           }
           
           else {
             PasswordField.setEditable(false);
           UserNameField.setEditable(false);
           }
    }//GEN-LAST:event_LogInBottunItemStateChanged

    private void BackButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButton1ActionPerformed

        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButton1ActionPerformed
public void Check() throws SQLException,InputMismatchException {
    
        try{
         String Location= LocationField.getText();  
          String user=RUserField.getText();
          String HotelF=HotelField.getText(); 
          String HServices=HServicesField.getText();
          String Rnumb=NumRoomField.getText();
          String price=PriceField.getText();
          
if(!user.matches("^[a-zA-Z]+$")){
        JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","User name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HotelF.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","Hotel name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HServices.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","Hotel Services Field ",JOptionPane.WARNING_MESSAGE);}
else if (!Location.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(HotelOwner.this,
                "Only letters accepted","Location Field ",JOptionPane.WARNING_MESSAGE);}
 else if (!Rnumb.matches("\\d")){ JOptionPane.showMessageDialog(HotelOwner.this,"Must enter a numeric value ",
                     "Number of room Field",JOptionPane.WARNING_MESSAGE);}
  else if (!price.matches("\\d")){ JOptionPane.showMessageDialog(HotelOwner.this,"Must enter a numeric value ",
                     "Price Field",JOptionPane.WARNING_MESSAGE);}
else {
 
        String selectMax =  "SELECT MAX(SERIAL_NUMBER) FROM hotels_information";
        String selectMaxRoom = "SELECT MAX(ROOM_NUMBER) FROM ROOMS";
        try ( Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        Statement st=connection.createStatement()){
        int max = 0;    
        ResultSet rs = st.executeQuery(selectMax);
        while(rs.next()) {
            max = rs.getInt(1);
        }
        int maxRoom = 0;
        rs = st.executeQuery(selectMaxRoom);
        while(rs.next()) {
            maxRoom = rs.getInt(1);
        }
        String INSERT1="INSERT INTO  itravel.`hotels_information` "+
            "( `Serial_Number`,`Hotel_name`,`User_Name`,`Password`, `Number_of_Room`, `Price`,`Location`)"
            + " VALUES("+(max+1)+",'"+HotelField.getText()+"','"+ RUserField.getText() +"','"+RPasswordField.getText()+"',"+
                    Integer.parseInt(NumRoomField.getText())+","+Integer.parseInt(PriceField.getText())+",'"+LocationField.getText()+"')";
        
        String INSERT2="INSERT INTO itravel.`hotel_service` (`SN`,`Hotel_service`) VALUES("+(max+1)+",'"+HServicesField.getText()+"')";
        String INSERT3="INSERT INTO itravel.`rooms` (`ROOM_NUMBER`,`HSN`,`Max_Customer`,`Type`) VALUES("+(maxRoom+1)+","+(max+1)+",'"+MaxComboBox.getSelectedItem().toString()+"','"+RoomComboBox1.getSelectedItem().toString()+"')";
        int result1=st.executeUpdate(INSERT1);
        int result2=st.executeUpdate(INSERT2);
           int result3=st.executeUpdate(INSERT3);
            JOptionPane.showMessageDialog(null," You have been succssfuly registerd");
            OwnerAccount ownerAccount = new OwnerAccount(RUserField.getText(),RPasswordField.getText() );
         ownerAccount.setVisible(true);
         dispose();
           } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,ex.getMessage());
    }}
       }
 
        catch(Exception e){
      JOptionPane.showMessageDialog(HotelOwner.this,"somethong went wrong with your insertion","Error",JOptionPane.WARNING_MESSAGE);
      }
      }

    /**
     * @Hanadim Argo the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HotelOwner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HotelOwner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HotelOwner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HotelOwner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HotelOwner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BGPanel;
    private javax.swing.JButton BackButton1;
    private javax.swing.JLabel HIcon;
    private javax.swing.ButtonGroup HObuttonGroup;
    public javax.swing.JTextField HServicesField;
    private javax.swing.JLabel HServicesLabel;
    private javax.swing.JLabel HServicesLabel1;
    public javax.swing.JTextField HotelField;
    private javax.swing.JLabel HotelLabel;
    public javax.swing.JTextField LocationField;
    private javax.swing.JRadioButton LogInBottun;
    public javax.swing.JButton LogInButton;
    private javax.swing.JComboBox<String> MaxComboBox;
    private javax.swing.JLabel MaxLabel;
    public javax.swing.JTextField NumRoomField;
    private javax.swing.JLabel NumRoomLabel;
    private javax.swing.JLabel OwnerHeader;
    public javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLable;
    public javax.swing.JTextField PriceField;
    private javax.swing.JLabel PriceLabel;
    public javax.swing.JPasswordField RPasswordField;
    private javax.swing.JLabel RPasswordLabel;
    public javax.swing.JTextField RUserField;
    private javax.swing.JLabel RUserLabel;
    private javax.swing.JRadioButton RegisterBottun;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JPanel RegisterPanel;
    private javax.swing.JComboBox<String> RoomComboBox1;
    private javax.swing.JLabel RoomTLabel;
    private javax.swing.JLabel UserLable;
    public javax.swing.JTextField UserNameField;
    // End of variables declaration//GEN-END:variables
}
