/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itravel;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.InputMismatchException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Hanadim
 */
public class OwnerAccount extends javax.swing.JFrame {
Connection connect=null;
PreparedStatement statement=null;
ResultSet result=null;
HotelOwner Hotel=new HotelOwner();


    public OwnerAccount(String userName, String password) {
        initComponents();      
        TableData(userName, password);
  
        
    }
    
    public OwnerAccount() {
        initComponents();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BGPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        HotelTable1 = new javax.swing.JTable();
        OwnerHeader1 = new javax.swing.JLabel();
        HIcon = new javax.swing.JLabel();
        BackButton1 = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        HotelLabel = new javax.swing.JLabel();
        HotelField = new javax.swing.JTextField();
        NumRoomLabel = new javax.swing.JLabel();
        NumRoomField = new javax.swing.JTextField();
        PriceLabel = new javax.swing.JLabel();
        PriceField = new javax.swing.JTextField();
        RUserLabel = new javax.swing.JLabel();
        RPasswordLabel = new javax.swing.JLabel();
        LocationLabel = new javax.swing.JLabel();
        LocationField = new javax.swing.JTextField();
        RUserField = new javax.swing.JTextField();
        RPasswordField = new javax.swing.JTextField();
        SField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Owner Account");

        BGPanel.setBackground(new java.awt.Color(238, 236, 233));

        HotelTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hotel Name", "Number of room", "Price", "Hotel Service"
            }
        ));
        HotelTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(HotelTable1);

        OwnerHeader1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/h.jpg"))); // NOI18N

        HIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fotter1.jpg"))); // NOI18N

        BackButton1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        BackButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        BackButton1.setToolTipText("");
        BackButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButton1ActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.setToolTipText("");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        HotelLabel.setText("Hotel Name");

        NumRoomLabel.setText("Number of Room");

        PriceLabel.setText("Price");

        RUserLabel.setText("User Name");

        RPasswordLabel.setText("Password");

        LocationLabel.setText("Location");

        SField.setDragEnabled(false);

        javax.swing.GroupLayout BGPanelLayout = new javax.swing.GroupLayout(BGPanel);
        BGPanel.setLayout(BGPanelLayout);
        BGPanelLayout.setHorizontalGroup(
            BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OwnerHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(265, 265, 265)
                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(HotelLabel)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PriceLabel)
                            .addComponent(NumRoomLabel))
                        .addGap(18, 18, 18)))
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PriceField, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(NumRoomField)
                    .addComponent(HotelField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RUserLabel)
                            .addComponent(RPasswordLabel))
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(RUserField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addComponent(LocationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LocationField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(91, 91, 91))
        );
        BGPanelLayout.setVerticalGroup(
            BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(OwnerHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(BackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(HotelLabel)
                                    .addComponent(HotelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(NumRoomLabel)
                                    .addComponent(NumRoomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PriceLabel)
                                    .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RUserLabel)
                                    .addComponent(RUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RPasswordLabel)
                                    .addComponent(RPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(LocationLabel)
                                    .addComponent(LocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HIcon))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
       valid();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void BackButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButton1ActionPerformed

        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButton1ActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
         
        int i = HotelTable1.getSelectedRow();
        TableModel model = HotelTable1.getModel();
        SField.setText(model.getValueAt(i, 0).toString());
        RUserField.setText(model.getValueAt(i, 2).toString());
        HotelField.setText(model.getValueAt(i, 1).toString());
        NumRoomField.setText(model.getValueAt(i, 3).toString());
        PriceField.setText(model.getValueAt(i, 5).toString());
        RPasswordField.setText(model.getValueAt(i, 4).toString());
        LocationField.setText(model.getValueAt(i, 6).toString());
       
 TableUpdata();
 
    }//GEN-LAST:event_TableMouseClicked
 public void TableData(String u,String p){
 
    try { 
        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String SHOW="SELECT * FROM itravel.`hotels_information` WHERE User_name=? and Password=? "; 
        statement=connect.prepareStatement(SHOW);
        statement.setString(1, u);
        statement.setString(2, p);
        result=statement.executeQuery();
        HotelTable1.setModel(DbUtils.resultSetToTableModel(result));
     
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null,ex.getMessage());
    }

}
 public void TableUpdata(){
    try {
        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String SHOW="SELECT * FROM itravel.`hotels_information`WHERE `Serial_number`=?";
        statement=connect.prepareStatement(SHOW);
         statement.setString(1,SField.getText());
        result=statement.executeQuery();
        HotelTable1.setModel(DbUtils.resultSetToTableModel(result)); 
        
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(OwnerAccount.this,"Somthing went wrong please try again"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    }

}
 
  
 public void valid(){ 
 try { 
        if( HotelField.getText().length()!=0 &&  
 NumRoomField.getText().length()!=0 && RPasswordField.getText().length()!=0 &&
  RUserField.getText().length()!=0 &&  PriceField.getText().length()!=0 && 
              LocationField.getText().length()!=0 ){   
  
    String Location= LocationField.getText();  
    String user=RUserField.getText();
    String HotelF=HotelField.getText(); 
    String Rnumb=NumRoomField.getText(); 
    String price=PriceField.getText(); 
       
if(!user.matches("^[a-zA-Z]+$")){
        JOptionPane.showMessageDialog(OwnerAccount.this,
                "Only letters accepted","User name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HotelF.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(OwnerAccount.this,
                "Only letters accepted","Hotel name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!Location.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(OwnerAccount.this,
                "Only letters accepted","Location Field ",JOptionPane.WARNING_MESSAGE);}
else if (!Rnumb.matches("\\d+")){
    JOptionPane.showMessageDialog(OwnerAccount.this,
                "must enter a numeric value","Room number Field ",JOptionPane.WARNING_MESSAGE);}
 else if (!price.matches("\\d+")){
    JOptionPane.showMessageDialog(OwnerAccount.this,
                "must enter a numeric value","Price Field ",JOptionPane.WARNING_MESSAGE);}

else {


            connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
            String UPDATE="UPDATE `itravel`.`hotels_information` "+
            "SET `User_name`=?,`Number_of_Room`=?, `Password`=?,`price`=?,`Hotel_name`=?,`Location`=?"
            + "WHERE `Serial_number`=?";
            statement=connect.prepareStatement(UPDATE);
            statement.setString(1,RUserField.getText());
            statement.setString(3,RPasswordField.getText());
            statement.setString(5,HotelField.getText());
            statement.setInt(2,parseInt(NumRoomField.getText()));
            statement.setInt(4,parseInt(PriceField.getText()));
            statement.setString(6,LocationField.getText());
            statement.setString(7,SField.getText());
            statement.executeUpdate(); 

            JOptionPane.showMessageDialog(null," Updated Successfully ");
            HotelField.setText("");
            NumRoomField.setText("");
            RPasswordField.setText("");
            PriceField.setText("");
            RUserField.setText("");
            LocationField.setText("");
            
             TableUpdata();
}
 }
        
     else 
          JOptionPane.showMessageDialog(OwnerAccount.this,"You must select a hotel to modify its information"
                  ,"Missing Information",JOptionPane.WARNING_MESSAGE);
 }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
 
     
 
 }
    /**
     * @Hanadim  the command line arguments
     */
    public static void main(String args[]) {
          OwnerAccount owner=new  OwnerAccount();
      owner.addWindowListener(
      new WindowAdapter(){
          @Override
          public void windowClosed(WindowEvent e) {
              try {
                  owner.connect.close();
                  owner.statement.close();
                  owner.result.close();
                  // exit ??
              } catch (SQLException ex) {
                ex.printStackTrace();
              }
   } });

        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OwnerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OwnerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OwnerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OwnerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OwnerAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BGPanel;
    private javax.swing.JButton BackButton1;
    private javax.swing.JLabel HIcon;
    private javax.swing.JTextField HotelField;
    private javax.swing.JLabel HotelLabel;
    private javax.swing.JTable HotelTable1;
    private javax.swing.JTextField LocationField;
    private javax.swing.JLabel LocationLabel;
    private javax.swing.JTextField NumRoomField;
    private javax.swing.JLabel NumRoomLabel;
    private javax.swing.JLabel OwnerHeader1;
    private javax.swing.JTextField PriceField;
    private javax.swing.JLabel PriceLabel;
    private javax.swing.JTextField RPasswordField;
    private javax.swing.JLabel RPasswordLabel;
    private javax.swing.JTextField RUserField;
    private javax.swing.JLabel RUserLabel;
    public javax.swing.JTextField SField;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
