/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itravel; 

import java.awt.HeadlessException;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.InputMismatchException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;



/**
 *
 * @author Hanadim
 */
public class Admin extends javax.swing.JFrame {
Connection connect=null;
PreparedStatement statement=null;
ResultSet result=null;

    public Admin() {
        initComponents();
        TableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BGPanel = new javax.swing.JPanel();
        AdminHeader = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        HotelTable = new javax.swing.JTable();
        HotelField = new javax.swing.JTextField();
        HotelLabel = new javax.swing.JLabel();
        NumRoomField = new javax.swing.JTextField();
        NumRoomLabel = new javax.swing.JLabel();
        PriceLabel = new javax.swing.JLabel();
        PriceField = new javax.swing.JTextField();
        HServicesLabel = new javax.swing.JLabel();
        HServicesField = new javax.swing.JTextField();
        SerialField = new javax.swing.JTextField();
        SerialLabel = new javax.swing.JLabel();
        LocationField = new javax.swing.JTextField();
        LocationLabel = new javax.swing.JLabel();
        ReservationButton = new javax.swing.JButton();
        CustomerButton1 = new javax.swing.JButton();
        Searchfield = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        RoomTLabel = new javax.swing.JLabel();
        MaxComboBox = new javax.swing.JComboBox<>();
        MaxLabel = new javax.swing.JLabel();
        RoomComboBox1 = new javax.swing.JComboBox<>();
        CIcon = new javax.swing.JLabel();
        UserLable = new javax.swing.JLabel();
        PasswordLable = new javax.swing.JLabel();
        UserField = new javax.swing.JTextField();
        PasswordField = new javax.swing.JTextField();
        HotelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Aadministrator");

        BGPanel.setBackground(new java.awt.Color(238, 236, 233));

        AdminHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/h.jpg"))); // NOI18N

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.setToolTipText("");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        BackButton.setToolTipText("");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        HotelTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hotel Name", "Number of room", "Price", "Hotel Service"
            }
        ));
        HotelTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HotelTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(HotelTable);

        HotelLabel.setText("Hotel Name");

        NumRoomLabel.setText("Number of Room");

        PriceLabel.setText("Price");

        HServicesLabel.setText("Hotels Services");

        SerialLabel.setText("Serial Number");

        LocationLabel.setText("Location");

        ReservationButton.setText("Reservation details");
        ReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservationButtonActionPerformed(evt);
            }
        });

        CustomerButton1.setText("Customer details");
        CustomerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerButton1ActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        RoomTLabel.setText("Room Type");

        MaxComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        MaxLabel.setText("Max Customer");

        RoomComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "one_Bedroom", "Two_ Bedroom" }));

        CIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fo3.jpg"))); // NOI18N

        UserLable.setText("Owner User Name");

        PasswordLable.setText("Owner Password");

        HotelButton.setText("Hotel information");
        HotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HotelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BGPanelLayout = new javax.swing.GroupLayout(BGPanel);
        BGPanel.setLayout(BGPanelLayout);
        BGPanelLayout.setHorizontalGroup(
            BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                        .addComponent(AdminHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113))
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UserLable)
                                    .addComponent(SerialLabel))
                                .addGap(18, 18, 18)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(UserField, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(SerialField)))
                            .addComponent(HotelLabel)
                            .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(BGPanelLayout.createSequentialGroup()
                                    .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                                                .addComponent(NumRoomLabel)
                                                .addGap(18, 18, 18))
                                            .addGroup(BGPanelLayout.createSequentialGroup()
                                                .addComponent(MaxLabel)
                                                .addGap(36, 36, 36)))
                                        .addGroup(BGPanelLayout.createSequentialGroup()
                                            .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(PriceLabel)
                                                .addComponent(HServicesLabel)
                                                .addComponent(RoomTLabel))
                                            .addGap(29, 29, 29)))
                                    .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(PriceField)
                                        .addComponent(NumRoomField)
                                        .addComponent(HServicesField)
                                        .addComponent(RoomComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(MaxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(HotelField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(BGPanelLayout.createSequentialGroup()
                                    .addComponent(LocationLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LocationField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                                    .addComponent(PasswordLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(4, 4, 4)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                                        .addComponent(SearchButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(Searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(70, 70, 70))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                                        .addComponent(CIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56))))
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CustomerButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(HotelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGap(12, 12, 12)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ReservationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(UpdateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(56, 56, 56))))))
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        BGPanelLayout.setVerticalGroup(
            BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BGPanelLayout.createSequentialGroup()
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AdminHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchButton)
                            .addComponent(Searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BGPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SerialLabel)
                            .addComponent(SerialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UserLable)
                            .addComponent(UserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PasswordLable)
                            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HotelLabel)
                            .addComponent(HotelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumRoomLabel)
                            .addComponent(NumRoomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PriceLabel))
                        .addGap(13, 13, 13)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(HServicesLabel)
                                .addGap(18, 18, 18)
                                .addComponent(LocationLabel)
                                .addGap(24, 24, 24)
                                .addComponent(RoomTLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MaxLabel)
                                    .addComponent(MaxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(BGPanelLayout.createSequentialGroup()
                                .addComponent(HServicesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(LocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RoomComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(BGPanelLayout.createSequentialGroup()
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustomerButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReservationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HotelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BGPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 234, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BGPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 743, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BGPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
       
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
   try{ 
        if (SerialField.getText().length()!=0 && HotelField.getText().length()!=0 && UserField.getText().length()!=0 &&
          NumRoomField.getText().length()!=0 && PriceField.getText().length()!=0 &&LocationField.getText().length()!=0 
          && UserField.getText().length()!=0 && PasswordField.getText().length()!=0 ){
          String Location= LocationField.getText();  
          String SN=SerialField.getText();
          String user=UserField.getText();
          String HotelF=HotelField.getText(); 
          String HServices=HServicesField.getText();
          String Rnumb=NumRoomField.getText(); 
          String price=PriceField.getText(); 
if(!SN.matches("\\d+")){  JOptionPane.showMessageDialog(Admin.this,
              "must enter a numeric value","Serial number Field ",JOptionPane.WARNING_MESSAGE);}        
else if(!user.matches("^[a-zA-Z]+$")){
        JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","User name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HotelF.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","Hotel name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!Rnumb.matches("\\d+")){
    JOptionPane.showMessageDialog(Admin.this,
                "must enter a numeric value","Room number Field ",JOptionPane.WARNING_MESSAGE);}
 else if (!price.matches("\\d+")){
    JOptionPane.showMessageDialog(Admin.this,
                "must enter a numeric value","Price Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HServices.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","Hotel Services Field ",JOptionPane.WARNING_MESSAGE);}
else if (!Location.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","Location Field ",JOptionPane.WARNING_MESSAGE);}
else {
       
            String INSERT1="INSERT INTO  itravel.`hotels_information` "+
            "(`Serial_number`, `Hotel_name`,User_name, `Number_of_Room`,Password, `Price`,`Location`)"
            + " VALUES("+Integer.parseInt(SerialField.getText())+",'"+HotelField.getText()+"','"+UserField.getText()+"',"
             + ""+Integer.parseInt(NumRoomField.getText())+",'"+PasswordField.getText()+"',"+Integer.parseInt(PriceField.getText())+","
             + "'"+LocationField.getText()+"')";
            String INSERT2="INSERT INTO itravel.`hotel_service` (`SN`,`Hotel_service`) VALUES('"+SerialField.getText()+"','"+HServicesField.getText()+"')";
            String selectMax = "SELECT MAX(ROOM_NUMBER) FROM ROOMS";

        try ( Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        Statement st=connection.createStatement()){
      
        int result1=st.executeUpdate(INSERT1);
        int result2=st.executeUpdate(INSERT2);
        ResultSet rs = st.executeQuery(selectMax);
        int max = 0;
        
        while(rs.next()) {
            max = rs.getInt(1);
        }
        String INSERT3="INSERT INTO itravel.`rooms` (`ROOM_NUMBER`,`HSN`,`Max_Customer`,Room_price,`Type`) "
         + "VALUES("+String.valueOf(max+1)+","+Integer.parseInt(SerialField.getText())+","+Integer.parseInt(MaxComboBox.getSelectedItem().toString())+","+Integer.parseInt(PriceField.getText())+",'"+(String)(RoomComboBox1.getSelectedItem())+"')";
        int result3=st.executeUpdate(INSERT3); 

        TableData();
        
        HotelField.setText("");
        NumRoomField.setText("");
        PriceField.setText("");
        HServicesField.setText(""); 
        LocationField.setText("");
        SerialField.setText("");
        UserField.setText("");
        PasswordField.setText("");
        
           } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,ex.getMessage());
    }
         
    TableData();
}} else   JOptionPane.showMessageDialog(Admin.this,"You have to fill all the information"
                  ,"Missing Information",JOptionPane.WARNING_MESSAGE);
   }catch (HeadlessException | NumberFormatException ex) {
           JOptionPane.showMessageDialog(Admin.this,"invalid value"
                  ,"Wrong Entery",JOptionPane.WARNING_MESSAGE);
    }
   TableData();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
    try {
        if (SerialField.getText().length()!=0){ 
        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String DELETE="DELETE FROM `itravel`.`hotels_information`"
                + " WHERE `Serial_number`=? ";
      
        statement=connect.prepareStatement(DELETE);
        statement.setString(1,SerialField.getText());
        statement.executeUpdate();
        
          String DELETE1="DELETE FROM `itravel`.`hotel_service`"
                + " WHERE `SN`=? ";
      
        statement=connect.prepareStatement(DELETE1);
        statement.setString(1,SerialField.getText());
        statement.executeUpdate();
        
        JOptionPane.showMessageDialog(null," Delete Successfully ");
        HotelField.setText("");
        NumRoomField.setText("");
        PriceField.setText("");
        HServicesField.setText(""); 
        LocationField.setText("");
        SerialField.setText("");
        UserField.setText("");
        PasswordField.setText("");
        
         TableData(); 
         } else   JOptionPane.showMessageDialog(Admin.this,"You must select a hotel to delete it"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    } catch (SQLException ex) {
       JOptionPane.showMessageDialog(Admin.this,"Somthing went wrong please try again"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    }
       TableData(); 
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
    try { 
        if (evt.getSource()==UpdateButton)
        
          // he cant update the SN so make the SN field enabled 
         if (SerialField.getText().length()!=0 && HotelField.getText().length()!=0 && UserField.getText().length()!=0 &&
         NumRoomField.getText().length()!=0 && PriceField.getText().length()!=0 &&LocationField.getText().length()!=0 && 
          UserField.getText().length()!=0 && PasswordField.getText().length()!=0 ){
          String Location= LocationField.getText();  
          String user=UserField.getText();
          String HotelF=HotelField.getText(); 
          String HServices=HServicesField.getText();
          String Rnumb=NumRoomField.getText(); 
          String price=PriceField.getText(); 

 if(!user.matches("^[a-zA-Z]+$")){
        JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","User name Field ",JOptionPane.WARNING_MESSAGE);}
else if (!HotelF.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","Hotel name Field ",JOptionPane.WARNING_MESSAGE);}

  else if (!Rnumb.matches("\\d+")){
    JOptionPane.showMessageDialog(Admin.this,
                "must enter a numeric value","Room number Field ",JOptionPane.WARNING_MESSAGE);}
 else if (!price.matches("\\d+")){
    JOptionPane.showMessageDialog(Admin.this,
                "must enter a numeric value","Price Field ",JOptionPane.WARNING_MESSAGE);}
 else if (!HServices.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","Hotel Services Field ",JOptionPane.WARNING_MESSAGE);}
else if (!Location.matches("^[a-zA-Z\\s]+$")){
    JOptionPane.showMessageDialog(Admin.this,
                "Only letters accepted","Location Field ",JOptionPane.WARNING_MESSAGE);}
else {

        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String UPDATE="UPDATE `itravel`.`hotels_information` , itravel.`hotel_service`,itravel.`rooms`"+
                 "SET `Number_of_Room`=?,`price`=?,`Hotel_name`=?,`Max_Customer`=?, `Type`=?, `Hotel_Service`=?,"
                + "`Location`=?,`User_name`=?,`Password`=?"
                + "WHERE `Serial_number`=`SN` AND `Serial_number`=`HSN` AND `Serial_number`=?";
        statement=connect.prepareStatement(UPDATE);
        statement.setString(3,HotelField.getText());
        statement.setInt(1,parseInt(NumRoomField.getText()));
        statement.setString(6,HServicesField.getText());
        statement.setString(7,LocationField.getText());
        statement.setInt(10,parseInt(SerialField.getText()));
        statement.setString(9,PasswordField.getText());
        statement.setString(8,UserField.getText());
        statement.setInt(2,parseInt(PriceField.getText()));
        statement.setObject(4,MaxComboBox.getSelectedItem().toString());
        statement.setObject(5,RoomComboBox1.getSelectedItem().toString());
        statement.executeUpdate();

        JOptionPane.showMessageDialog(null," Updated Successfully ");
        HotelField.setText("");
        NumRoomField.setText("");
        PriceField.setText("");
        HServicesField.setText(""); 
        LocationField.setText("");
        SerialField.setText("");
        UserField.setText("");
        PasswordField.setText("");
}  } else   JOptionPane.showMessageDialog(Admin.this,"You must select a hotel to modify its information"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    } catch (Exception ex) {
         JOptionPane.showMessageDialog(Admin.this,"Somthing went wrong please try again"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
} 
   TableData();  
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void HotelTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HotelTableMouseClicked

        try {
            
            if(evt.getSource()== ReservationButton || evt.getSource()==CustomerButton1){
               HotelField.setEditable(false);
               NumRoomField.setEditable(false);
               PriceField.setEditable(false);
               HServicesField.setEditable(false);
               LocationField.setEditable(false);
               SerialField.setEditable(false);
               UserField.setEditable(false);
               PasswordField.setEditable(false);
}
else {

        int i = HotelTable.getSelectedRow();
        TableModel model = HotelTable.getModel();
        SerialField.setText(model.getValueAt(i, 0).toString());
        UserField.setText(model.getValueAt(i, 2).toString());
        PasswordField.setText(model.getValueAt(i, 4).toString());
        HotelField.setText(model.getValueAt(i, 1).toString());
        NumRoomField.setText(model.getValueAt(i, 3).toString());
        PriceField.setText(model.getValueAt(i, 5).toString());
        HServicesField.setText(model.getValueAt(i, 7).toString());
        LocationField.setText(model.getValueAt(i, 6).toString()); 
        MaxComboBox.setSelectedItem(model.getValueAt(i, 8).toString());
        String Room=model.getValueAt(i, 9).toString(); 
        switch(Room){
            case "one_Bedroom":
                RoomComboBox1.setSelectedIndex(0);
                break;
             case "Two_Bedroom":
                 RoomComboBox1.setSelectedIndex(1);
                break;  }
       
       
 TableData();

            }     } catch (Exception ex){ JOptionPane.showMessageDialog(Admin.this,"Your not allowed to modify this information"
                  ,"Error Message",JOptionPane.WARNING_MESSAGE);
             HotelField.setText("");
             NumRoomField.setText("");
             PriceField.setText("");
             HServicesField.setText(""); 
             LocationField.setText("");
             SerialField.setText("");
             UserField.setText("");
             PasswordField.setText("");
}
    }//GEN-LAST:event_HotelTableMouseClicked

    private void ReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservationButtonActionPerformed
        
        if(evt.getSource()==ReservationButton){
             HotelField.setText("");
             NumRoomField.setText("");
             PriceField.setText("");
             HServicesField.setText(""); 
             LocationField.setText("");
             SerialField.setText("");
             UserField.setText("");
             PasswordField.setText("");
              HotelField.setEditable(false);
               NumRoomField.setEditable(false);
               PriceField.setEditable(false);
               HServicesField.setEditable(false);
               LocationField.setEditable(false);
               SerialField.setEditable(false);
               UserField.setEditable(false);
               PasswordField.setEditable(false);

             try {
        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String SHOW="SELECT * FROM itravel.reservation";
        statement=connect.prepareStatement(SHOW);
        result=statement.executeQuery();
        HotelTable.setModel(DbUtils.resultSetToTableModel(result));
    
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(Admin.this,"Somthing went wrong please try again"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    }
        
        }  
    }//GEN-LAST:event_ReservationButtonActionPerformed

    private void CustomerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerButton1ActionPerformed
   if(evt.getSource()==CustomerButton1){
        HotelField.setText("");
        NumRoomField.setText("");
        PriceField.setText("");
        HServicesField.setText(""); 
        LocationField.setText("");
        SerialField.setText("");
        UserField.setText("");
        PasswordField.setText("");
               HotelField.setEditable(false);
               NumRoomField.setEditable(false);
               PriceField.setEditable(false);
               HServicesField.setEditable(false);
               LocationField.setEditable(false);
               SerialField.setEditable(false);
               UserField.setEditable(false);
               PasswordField.setEditable(false);

                       try {
        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String SHOW="SELECT * FROM `itravel`.`customer_information`";
        statement=connect.prepareStatement(SHOW);
        result=statement.executeQuery();
        HotelTable.setModel(DbUtils.resultSetToTableModel(result));
     
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(Admin.this,"Somthing went wrong please try again"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    }}
    }//GEN-LAST:event_CustomerButton1ActionPerformed
   
    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
 TableModel model = HotelTable.getModel();
TableRowSorter sorter ;
sorter = new TableRowSorter(model);
HotelTable.setModel(model);
HotelTable.setRowSorter(sorter);
RowFilter< TableModel , Object> rf = null; 
    try
    {
       
        rf = RowFilter.regexFilter("(?i)"+Searchfield.getText());  
    }
    catch (java.util.regex.PatternSyntaxException e)
    {
        return;//
    }
    sorter.setRowFilter(rf);
       
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void HotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HotelButtonActionPerformed
       if(evt.getSource()== HotelButton){
           HotelField.setText("");
             NumRoomField.setText("");
             PriceField.setText("");
             HServicesField.setText(""); 
             LocationField.setText("");
             SerialField.setText("");
             UserField.setText("");
             PasswordField.setText("");
             
                HotelField.setEditable(true);
               NumRoomField.setEditable(true);
               PriceField.setEditable(true);
               HServicesField.setEditable(true);
               LocationField.setEditable(true);
               SerialField.setEditable(true);
               UserField.setEditable(true);
               PasswordField.setEditable(true);
     try {
       
        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String SHOW="SELECT `Serial_number`, `Hotel_name`,`User_name`, `Number_of_Room`,`Password`, `Price`, `Location`"
                + ",`Hotel_service`,`Max_Customer`, `Type` FROM"
                + " `itravel`.`hotels_information`,itravel.`hotel_service`,`itravel`.`rooms`"
                + " WHERE `Serial_number`=`SN` AND `HSN`=`Serial_number` ";
        statement=connect.prepareStatement(SHOW);
        result=statement.executeQuery();
        HotelTable.setModel(DbUtils.resultSetToTableModel(result)); 
        
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(Admin.this,"Somthing went wrong please try again"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    }}
    }//GEN-LAST:event_HotelButtonActionPerformed
public void TableData(){
    try { 
        connect=DriverManager.getConnection("jdbc:mysql://localhost:3306/itravel","root","Hn@30113011");
        String SHOW="SELECT `Serial_number`, `Hotel_name`,`User_name`, `Number_of_Room`,`Password`, `Price`, `Location`"
                + ",`Hotel_service`,`Max_Customer`, `Type` FROM"
                + " `itravel`.`hotels_information`,itravel.`hotel_service`,`itravel`.`rooms`"
                + " WHERE `Serial_number`=`SN` AND `HSN`=`Serial_number` ";
        statement=connect.prepareStatement(SHOW);
        result=statement.executeQuery();
        HotelTable.setModel(DbUtils.resultSetToTableModel(result)); 
        
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(Admin.this,"Somthing went wrong please try again"
                  ,"Error",JOptionPane.WARNING_MESSAGE);
    }
}
    /**
     * @Hanadim Argo the command line arguments
     */
    public static void main(String args[]) {
      Admin admin=new Admin();
      admin.addWindowListener(
      new WindowAdapter(){
          @Override
          public void windowClosed(WindowEvent e) {
              try {
                  admin.connect.close();
                  admin.statement.close();
                  admin.result.close();
                  
              } catch (SQLException ex) {
                ex.printStackTrace();
              }
   } });
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch  (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
   /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JLabel AdminHeader;
    private javax.swing.JPanel BGPanel;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel CIcon;
    private javax.swing.JButton CustomerButton1;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField HServicesField;
    private javax.swing.JLabel HServicesLabel;
    private javax.swing.JButton HotelButton;
    private javax.swing.JTextField HotelField;
    private javax.swing.JLabel HotelLabel;
    private javax.swing.JTable HotelTable;
    private javax.swing.JTextField LocationField;
    private javax.swing.JLabel LocationLabel;
    private javax.swing.JComboBox<String> MaxComboBox;
    private javax.swing.JLabel MaxLabel;
    private javax.swing.JTextField NumRoomField;
    private javax.swing.JLabel NumRoomLabel;
    private javax.swing.JTextField PasswordField;
    private javax.swing.JLabel PasswordLable;
    private javax.swing.JTextField PriceField;
    private javax.swing.JLabel PriceLabel;
    private javax.swing.JButton ReservationButton;
    private javax.swing.JComboBox<String> RoomComboBox1;
    private javax.swing.JLabel RoomTLabel;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField Searchfield;
    public javax.swing.JTextField SerialField;
    private javax.swing.JLabel SerialLabel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTextField UserField;
    private javax.swing.JLabel UserLable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
